@using Toems_Common.Entity
@inject Toems_ApiCalls.APICall Call
@inject ISnackbar Snackbar
@inject IJSRuntime JS

<MudDialog>
    <TitleContent>
        <MudText Typo="Typo.h6">
            Starting Remote Control...
        </MudText>
    </TitleContent>
    <DialogContent>
       <MudProgressLinear Indeterminate="true"></MudProgressLinear>
    </DialogContent>
    <DialogActions>
        <MudButton OnClick="Cancel">Cancel</MudButton>
        <MudButton Color="Color.Primary" Variant="Variant.Filled" OnClick="Close">Close</MudButton>
        
    </DialogActions>
</MudDialog>


@code {
    [CascadingParameter]
    private IMudDialogInstance MudDialog { get; set; }
    
    [Parameter]
    public EntityComputer Computer { get; set; }
    
    private CancellationTokenSource _cts;

    private async Task Cancel() => await _cts.CancelAsync();
    private void Close() => MudDialog.Close(DialogResult.Ok(true));
    
    protected override async Task OnInitializedAsync()
    {
        _cts = new CancellationTokenSource();
        await Call.ComputerApi.ClearLastSocketResult(Computer.Id);
        await Call.ComputerApi.StartRemoteControl(Computer.Id);
        
        for (int counter = 0; counter < 10; counter++)
        {
            if (_cts.Token.IsCancellationRequested)
            {
                Snackbar.Add("Task cancelled", Severity.Warning);
                MudDialog.Close(DialogResult.Cancel());
                return;
            }

            var lastSocketResult = await Call.ComputerApi.GetLastSocketResult(Computer.Id);
            if (!string.IsNullOrEmpty(lastSocketResult))
            {
                if (lastSocketResult.Contains("Error"))
                {
                    Snackbar.Add(lastSocketResult, Severity.Error);
                    MudDialog.Cancel();
                    return;
                }
                if (lastSocketResult.Equals("Ready"))
                    break;
 
            }
            await Task.Delay(1000);
        }
        
        var subCounter = 0;
        while (subCounter < 10)
        {
            var isOnline = await Call.RemoteAccessApi.IsDeviceOnline(Computer.RemoteAccessId);
            if(isOnline != null)
            {
                if (isOnline.Equals("true"))
                    break;
            }
            if(subCounter == 9)
            {
                Snackbar.Add("Device is not online", Severity.Error);
                MudDialog.Cancel();
                return;
            }
            await Task.Delay(1000);
            subCounter++;
        }
        
        var url = await Call.RemoteAccessApi.GetRemoteControlUrl(Computer.RemoteAccessId);
        if (string.IsNullOrEmpty(url))
            Snackbar.Add("Unknown Error.  Check The Exception Logs.", Severity.Error);
        else if (url.Contains("Error"))
            Snackbar.Add(url,Severity.Error);
        else if (url.Contains("http") || url.Contains("https"))
        {
            Snackbar.Add("Started Remote Control",Severity.Success);
            await JS.InvokeVoidAsync("open", url, "_blank");
            MudDialog.Close(DialogResult.Ok(true));
            return;
        }
        MudDialog.Cancel();
    }
}