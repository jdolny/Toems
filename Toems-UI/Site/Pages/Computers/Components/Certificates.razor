@using Toems_ApiCalls
@using Toems_Common.Entity
@using Toems_UI.Site.Layout
@layout MainLayout
@inject APICall Call
@inherits BaseComponent


<MudDataGrid HeaderClass="test"  HorizontalScrollbar="true" FixedFooter="true" FixedHeader="true" Striped="true" T="EntityCertificateInventory" Class="mb-2" Elevation="5" Items="@_certificates" ColumnResizeMode="ResizeMode.Column" Filterable="true" FilterMode="DataGridFilterMode.ColumnFilterMenu" FilterCaseSensitivity="DataGridFilterCaseSensitivity.CaseInsensitive"  >

    <PagerContent><MudDataGridPager T="EntityCertificateInventory" /></PagerContent>
    <Columns>
        <PropertyColumn Property="x => x.FriendlyName" Title="Friendly Name" />
        <PropertyColumn Property="x => x.Subject" Title="Subject" />
        <PropertyColumn Property="x => x.Store" Title="Store" />
        <PropertyColumn Property="x => x.Issuer" Title="Issuer" />
        <PropertyColumn Property="x => x.NotBefore" Title="Not Before" />
        <PropertyColumn Property="x => x.NotAfter" Title="Not After" />
        <PropertyColumn Property="x => x.Serial" Title="Serial" />
        <PropertyColumn Property="x => x.Thumbprint" Title="Thumbprint" />
    </Columns>
</MudDataGrid>
@code {
    private readonly List<BreadcrumbItem> _breadcrumbs =
    [
        new("Home", href: "/"),
        new("Computer Search", href: null, disabled: true)
    ];
    
    [Parameter] public EntityComputer Computer { get; set; } = new();
    private IEnumerable<EntityCertificateInventory> _certificates = new List<EntityCertificateInventory>();

    protected override async Task OnParametersSetAsync()
    {
        if (Computer.Id == 0) return;
        if(!SetTitleAndBreadcrumbs($"{Computer.Name} Certificates",_breadcrumbs)) return;
        await LoadCertificates();
    }

    private async Task LoadCertificates()
    {
        _certificates = await Call.ComputerApi.GetComputerCertificates(Computer.Id,"");
    }
}